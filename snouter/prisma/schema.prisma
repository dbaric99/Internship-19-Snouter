// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

// User table
model User {
  id             Int           @id @default(autoincrement())
  username       String        @unique
  email          String        @unique
  password       String
  role           Role          @default(USER)
  Address        Address       @relation(fields: [addressId], references: [id])
  addressId      Int
  products       Product[]
  profileImage   ProfileImage?
  soldProducts   Order[]       @relation("Seller")
  boughtProducts Order[]       @relation("Buyer")
}

// Address table
model Address {
  id     Int    @id @default(autoincrement())
  street String
  users  User[]
  city   City   @relation(fields: [cityId], references: [id])
  cityId Int
}

// City table
model City {
  id        Int       @id @default(autoincrement())
  name      String
  zip       String
  addresses Address[]
}

// Product table
model Product {
  id            Int                    @id @default(autoincrement())
  slug          String                 @unique
  name          String
  description   String
  price         Float
  createdAt     DateTime
  updatedAt     DateTime
  subcategory   Subcategory            @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
  seller        User                   @relation(fields: [sellerId], references: [id])
  sellerId      Int
  productSpecs  ProductSpecification[]
  images        ProductImage[]
  orders        Order[]
}

// Category table
model Category {
  id                    Int                     @id @default(autoincrement())
  name                  String
  subcategories         Subcategory[]
  CategorySpecification CategorySpecification[]
}

// Subcategory table
model Subcategory {
  id                       Int                        @id @default(autoincrement())
  name                     String
  products                 Product[]
  category                 Category                   @relation(fields: [categoryId], references: [id])
  categoryId               Int
  SubcategorySpecification SubcategorySpecification[]
}

// CategorySpecification table
model CategorySpecification {
  id              Int           @id @default(autoincrement())
  name            String
  category        Category      @relation(fields: [categoryId], references: [id])
  categoryId      Int
  specification   Specification @relation(fields: [specificationId], references: [id])
  specificationId Int
}

// SubcategorySpecification table
model SubcategorySpecification {
  id              Int           @id @default(autoincrement())
  name            String
  subcategory     Subcategory   @relation(fields: [subcategoryId], references: [id])
  subcategoryId   Int
  specification   Specification @relation(fields: [specificationId], references: [id])
  specificationId Int
}

// Specification table
model Specification {
  id                       Int                        @id @default(autoincrement())
  CategorySpecification    CategorySpecification[]
  SubcategorySpecification SubcategorySpecification[]
  ProductSpecification     ProductSpecification[]
}

// ProductSpecification table
model ProductSpecification {
  id              Int           @id @default(autoincrement())
  value           String
  product         Product       @relation(fields: [productId], references: [id])
  productId       Int
  specification   Specification @relation(fields: [specificationId], references: [id])
  specificationId Int
}

// ProductImage table
model ProductImage {
  guid      String  @id @default(uuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

// ProfileImage table
model ProfileImage {
  guid   String @id @default(uuid())
  url    String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

// Order table
model Order {
  id            Int     @id @default(autoincrement())
  slug          String  @unique
  product       Product @relation(fields: [productId], references: [id])
  productId     Int
  isCancelled   Boolean @default(false)
  seller        User    @relation("Seller", fields: [sellerId], references: [id])
  sellerId      Int
  buyer         User    @relation("Buyer", fields: [buyerId], references: [id])
  buyerId       Int
  shippingPrice Float
}
